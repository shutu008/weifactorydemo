<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vastsum.dao.ExperimentSettingMapper">
  <resultMap id="BaseResultMap" type="com.vastsum.entity.ExperimentSetting">
    <id column="experiment_setting_id" jdbcType="INTEGER" property="experimentSettingId" />
    <result column="experiment_id" jdbcType="INTEGER" property="experimentId" />
    <result column="nutrient_liquid_last_change_time" jdbcType="TIMESTAMP" property="nutrientLiquidLastChangeTime" />
    <result column="nutrient_liquid_remind_time" jdbcType="TIMESTAMP" property="nutrientLiquidRemindTime" />
    <result column="nutrient_liquid_emission_time_1" jdbcType="INTEGER" property="nutrientLiquidEmissionTime1" />
    <result column="nutrient_liquid_emission_time_2" jdbcType="INTEGER" property="nutrientLiquidEmissionTime2" />
    <result column="nutrient_liquid_emission_time_3" jdbcType="INTEGER" property="nutrientLiquidEmissionTime3" />
    <result column="nutrient_liquid_fill_time" jdbcType="INTEGER" property="nutrientLiquidFillTime" />
    <result column="nutrient_liquid_empty_time" jdbcType="INTEGER" property="nutrientLiquidEmptyTime" />
    <result column="communication_frequency" jdbcType="INTEGER" property="communicationFrequency" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="port_number" jdbcType="INTEGER" property="portNumber" />
    <result column="sampling_period" jdbcType="INTEGER" property="samplingPeriod" />
    <result column="storage_cycle" jdbcType="INTEGER" property="storageCycle" />
    <result column="out_room_time" jdbcType="INTEGER" property="outRoomTime" />
    <result column="in_room_time" jdbcType="INTEGER" property="inRoomTime" />
    <result column="time_mode" jdbcType="BIT" property="timeMode" />
    <result column="day_duration" jdbcType="INTEGER" property="dayDuration" />
    <result column="time_shift" jdbcType="INTEGER" property="timeShift" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    experiment_setting_id, experiment_id, nutrient_liquid_last_change_time, nutrient_liquid_remind_time, 
    nutrient_liquid_emission_time_1, nutrient_liquid_emission_time_2, nutrient_liquid_emission_time_3, 
    nutrient_liquid_fill_time, nutrient_liquid_empty_time, communication_frequency, ip_address, 
    port_number, sampling_period, storage_cycle, out_room_time, in_room_time, time_mode, 
    day_duration, time_shift, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.vastsum.entity.ExperimentSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from experiment_setting
    where experiment_setting_id = #{experimentSettingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from experiment_setting
    where experiment_setting_id = #{experimentSettingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vastsum.entity.ExperimentSettingExample">
    delete from experiment_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vastsum.entity.ExperimentSetting">
    insert into experiment_setting (experiment_setting_id, experiment_id, 
      nutrient_liquid_last_change_time, nutrient_liquid_remind_time, 
      nutrient_liquid_emission_time_1, nutrient_liquid_emission_time_2, 
      nutrient_liquid_emission_time_3, nutrient_liquid_fill_time, 
      nutrient_liquid_empty_time, communication_frequency, 
      ip_address, port_number, sampling_period, 
      storage_cycle, out_room_time, in_room_time, 
      time_mode, day_duration, time_shift, 
      gmt_create)
    values (#{experimentSettingId,jdbcType=INTEGER}, #{experimentId,jdbcType=INTEGER}, 
      #{nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP}, #{nutrientLiquidRemindTime,jdbcType=TIMESTAMP}, 
      #{nutrientLiquidEmissionTime1,jdbcType=INTEGER}, #{nutrientLiquidEmissionTime2,jdbcType=INTEGER}, 
      #{nutrientLiquidEmissionTime3,jdbcType=INTEGER}, #{nutrientLiquidFillTime,jdbcType=INTEGER}, 
      #{nutrientLiquidEmptyTime,jdbcType=INTEGER}, #{communicationFrequency,jdbcType=INTEGER}, 
      #{ipAddress,jdbcType=VARCHAR}, #{portNumber,jdbcType=INTEGER}, #{samplingPeriod,jdbcType=INTEGER}, 
      #{storageCycle,jdbcType=INTEGER}, #{outRoomTime,jdbcType=INTEGER}, #{inRoomTime,jdbcType=INTEGER}, 
      #{timeMode,jdbcType=BIT}, #{dayDuration,jdbcType=INTEGER}, #{timeShift,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vastsum.entity.ExperimentSetting">
    insert into experiment_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="experimentSettingId != null">
        experiment_setting_id,
      </if>
      <if test="experimentId != null">
        experiment_id,
      </if>
      <if test="nutrientLiquidLastChangeTime != null">
        nutrient_liquid_last_change_time,
      </if>
      <if test="nutrientLiquidRemindTime != null">
        nutrient_liquid_remind_time,
      </if>
      <if test="nutrientLiquidEmissionTime1 != null">
        nutrient_liquid_emission_time_1,
      </if>
      <if test="nutrientLiquidEmissionTime2 != null">
        nutrient_liquid_emission_time_2,
      </if>
      <if test="nutrientLiquidEmissionTime3 != null">
        nutrient_liquid_emission_time_3,
      </if>
      <if test="nutrientLiquidFillTime != null">
        nutrient_liquid_fill_time,
      </if>
      <if test="nutrientLiquidEmptyTime != null">
        nutrient_liquid_empty_time,
      </if>
      <if test="communicationFrequency != null">
        communication_frequency,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="portNumber != null">
        port_number,
      </if>
      <if test="samplingPeriod != null">
        sampling_period,
      </if>
      <if test="storageCycle != null">
        storage_cycle,
      </if>
      <if test="outRoomTime != null">
        out_room_time,
      </if>
      <if test="inRoomTime != null">
        in_room_time,
      </if>
      <if test="timeMode != null">
        time_mode,
      </if>
      <if test="dayDuration != null">
        day_duration,
      </if>
      <if test="timeShift != null">
        time_shift,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="experimentSettingId != null">
        #{experimentSettingId,jdbcType=INTEGER},
      </if>
      <if test="experimentId != null">
        #{experimentId,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidLastChangeTime != null">
        #{nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nutrientLiquidRemindTime != null">
        #{nutrientLiquidRemindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nutrientLiquidEmissionTime1 != null">
        #{nutrientLiquidEmissionTime1,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmissionTime2 != null">
        #{nutrientLiquidEmissionTime2,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmissionTime3 != null">
        #{nutrientLiquidEmissionTime3,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidFillTime != null">
        #{nutrientLiquidFillTime,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmptyTime != null">
        #{nutrientLiquidEmptyTime,jdbcType=INTEGER},
      </if>
      <if test="communicationFrequency != null">
        #{communicationFrequency,jdbcType=INTEGER},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="portNumber != null">
        #{portNumber,jdbcType=INTEGER},
      </if>
      <if test="samplingPeriod != null">
        #{samplingPeriod,jdbcType=INTEGER},
      </if>
      <if test="storageCycle != null">
        #{storageCycle,jdbcType=INTEGER},
      </if>
      <if test="outRoomTime != null">
        #{outRoomTime,jdbcType=INTEGER},
      </if>
      <if test="inRoomTime != null">
        #{inRoomTime,jdbcType=INTEGER},
      </if>
      <if test="timeMode != null">
        #{timeMode,jdbcType=BIT},
      </if>
      <if test="dayDuration != null">
        #{dayDuration,jdbcType=INTEGER},
      </if>
      <if test="timeShift != null">
        #{timeShift,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vastsum.entity.ExperimentSettingExample" resultType="java.lang.Long">
    select count(*) from experiment_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update experiment_setting
    <set>
      <if test="record.experimentSettingId != null">
        experiment_setting_id = #{record.experimentSettingId,jdbcType=INTEGER},
      </if>
      <if test="record.experimentId != null">
        experiment_id = #{record.experimentId,jdbcType=INTEGER},
      </if>
      <if test="record.nutrientLiquidLastChangeTime != null">
        nutrient_liquid_last_change_time = #{record.nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nutrientLiquidRemindTime != null">
        nutrient_liquid_remind_time = #{record.nutrientLiquidRemindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nutrientLiquidEmissionTime1 != null">
        nutrient_liquid_emission_time_1 = #{record.nutrientLiquidEmissionTime1,jdbcType=INTEGER},
      </if>
      <if test="record.nutrientLiquidEmissionTime2 != null">
        nutrient_liquid_emission_time_2 = #{record.nutrientLiquidEmissionTime2,jdbcType=INTEGER},
      </if>
      <if test="record.nutrientLiquidEmissionTime3 != null">
        nutrient_liquid_emission_time_3 = #{record.nutrientLiquidEmissionTime3,jdbcType=INTEGER},
      </if>
      <if test="record.nutrientLiquidFillTime != null">
        nutrient_liquid_fill_time = #{record.nutrientLiquidFillTime,jdbcType=INTEGER},
      </if>
      <if test="record.nutrientLiquidEmptyTime != null">
        nutrient_liquid_empty_time = #{record.nutrientLiquidEmptyTime,jdbcType=INTEGER},
      </if>
      <if test="record.communicationFrequency != null">
        communication_frequency = #{record.communicationFrequency,jdbcType=INTEGER},
      </if>
      <if test="record.ipAddress != null">
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.portNumber != null">
        port_number = #{record.portNumber,jdbcType=INTEGER},
      </if>
      <if test="record.samplingPeriod != null">
        sampling_period = #{record.samplingPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.storageCycle != null">
        storage_cycle = #{record.storageCycle,jdbcType=INTEGER},
      </if>
      <if test="record.outRoomTime != null">
        out_room_time = #{record.outRoomTime,jdbcType=INTEGER},
      </if>
      <if test="record.inRoomTime != null">
        in_room_time = #{record.inRoomTime,jdbcType=INTEGER},
      </if>
      <if test="record.timeMode != null">
        time_mode = #{record.timeMode,jdbcType=BIT},
      </if>
      <if test="record.dayDuration != null">
        day_duration = #{record.dayDuration,jdbcType=INTEGER},
      </if>
      <if test="record.timeShift != null">
        time_shift = #{record.timeShift,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update experiment_setting
    set experiment_setting_id = #{record.experimentSettingId,jdbcType=INTEGER},
      experiment_id = #{record.experimentId,jdbcType=INTEGER},
      nutrient_liquid_last_change_time = #{record.nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP},
      nutrient_liquid_remind_time = #{record.nutrientLiquidRemindTime,jdbcType=TIMESTAMP},
      nutrient_liquid_emission_time_1 = #{record.nutrientLiquidEmissionTime1,jdbcType=INTEGER},
      nutrient_liquid_emission_time_2 = #{record.nutrientLiquidEmissionTime2,jdbcType=INTEGER},
      nutrient_liquid_emission_time_3 = #{record.nutrientLiquidEmissionTime3,jdbcType=INTEGER},
      nutrient_liquid_fill_time = #{record.nutrientLiquidFillTime,jdbcType=INTEGER},
      nutrient_liquid_empty_time = #{record.nutrientLiquidEmptyTime,jdbcType=INTEGER},
      communication_frequency = #{record.communicationFrequency,jdbcType=INTEGER},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      port_number = #{record.portNumber,jdbcType=INTEGER},
      sampling_period = #{record.samplingPeriod,jdbcType=INTEGER},
      storage_cycle = #{record.storageCycle,jdbcType=INTEGER},
      out_room_time = #{record.outRoomTime,jdbcType=INTEGER},
      in_room_time = #{record.inRoomTime,jdbcType=INTEGER},
      time_mode = #{record.timeMode,jdbcType=BIT},
      day_duration = #{record.dayDuration,jdbcType=INTEGER},
      time_shift = #{record.timeShift,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vastsum.entity.ExperimentSetting">
    update experiment_setting
    <set>
      <if test="experimentId != null">
        experiment_id = #{experimentId,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidLastChangeTime != null">
        nutrient_liquid_last_change_time = #{nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nutrientLiquidRemindTime != null">
        nutrient_liquid_remind_time = #{nutrientLiquidRemindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nutrientLiquidEmissionTime1 != null">
        nutrient_liquid_emission_time_1 = #{nutrientLiquidEmissionTime1,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmissionTime2 != null">
        nutrient_liquid_emission_time_2 = #{nutrientLiquidEmissionTime2,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmissionTime3 != null">
        nutrient_liquid_emission_time_3 = #{nutrientLiquidEmissionTime3,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidFillTime != null">
        nutrient_liquid_fill_time = #{nutrientLiquidFillTime,jdbcType=INTEGER},
      </if>
      <if test="nutrientLiquidEmptyTime != null">
        nutrient_liquid_empty_time = #{nutrientLiquidEmptyTime,jdbcType=INTEGER},
      </if>
      <if test="communicationFrequency != null">
        communication_frequency = #{communicationFrequency,jdbcType=INTEGER},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="portNumber != null">
        port_number = #{portNumber,jdbcType=INTEGER},
      </if>
      <if test="samplingPeriod != null">
        sampling_period = #{samplingPeriod,jdbcType=INTEGER},
      </if>
      <if test="storageCycle != null">
        storage_cycle = #{storageCycle,jdbcType=INTEGER},
      </if>
      <if test="outRoomTime != null">
        out_room_time = #{outRoomTime,jdbcType=INTEGER},
      </if>
      <if test="inRoomTime != null">
        in_room_time = #{inRoomTime,jdbcType=INTEGER},
      </if>
      <if test="timeMode != null">
        time_mode = #{timeMode,jdbcType=BIT},
      </if>
      <if test="dayDuration != null">
        day_duration = #{dayDuration,jdbcType=INTEGER},
      </if>
      <if test="timeShift != null">
        time_shift = #{timeShift,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where experiment_setting_id = #{experimentSettingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vastsum.entity.ExperimentSetting">
    update experiment_setting
    set experiment_id = #{experimentId,jdbcType=INTEGER},
      nutrient_liquid_last_change_time = #{nutrientLiquidLastChangeTime,jdbcType=TIMESTAMP},
      nutrient_liquid_remind_time = #{nutrientLiquidRemindTime,jdbcType=TIMESTAMP},
      nutrient_liquid_emission_time_1 = #{nutrientLiquidEmissionTime1,jdbcType=INTEGER},
      nutrient_liquid_emission_time_2 = #{nutrientLiquidEmissionTime2,jdbcType=INTEGER},
      nutrient_liquid_emission_time_3 = #{nutrientLiquidEmissionTime3,jdbcType=INTEGER},
      nutrient_liquid_fill_time = #{nutrientLiquidFillTime,jdbcType=INTEGER},
      nutrient_liquid_empty_time = #{nutrientLiquidEmptyTime,jdbcType=INTEGER},
      communication_frequency = #{communicationFrequency,jdbcType=INTEGER},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      port_number = #{portNumber,jdbcType=INTEGER},
      sampling_period = #{samplingPeriod,jdbcType=INTEGER},
      storage_cycle = #{storageCycle,jdbcType=INTEGER},
      out_room_time = #{outRoomTime,jdbcType=INTEGER},
      in_room_time = #{inRoomTime,jdbcType=INTEGER},
      time_mode = #{timeMode,jdbcType=BIT},
      day_duration = #{dayDuration,jdbcType=INTEGER},
      time_shift = #{timeShift,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where experiment_setting_id = #{experimentSettingId,jdbcType=INTEGER}
  </update>
</mapper>